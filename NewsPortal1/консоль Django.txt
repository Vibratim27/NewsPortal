1) Создать двух пользователей
from new.models import User
user1 = User.objects.create_user('User1Mikhal')
user2 = User.objects.create_user('User2Daria')

2) Создать два объекта модели Author, связанные с пользователями
from new.models import Autor
author1 = Autor.objects.create(user = user1) 
author2 = Autor.objects.create(user = user2)

author1 = Autor.objects.get(id=1) 
author2 = Autor.objects.get(id=2)

3) Добавить 4 категории в модель Category
from new.models import Category
category1 = Category.objects.create(name='Works')
category2 = Category.objects.create(name='Study')
category3 = Category.objects.create(name='Sport') 
category4 = Category.objects.create(name='Cook')

category1 = Category.objects.get(id=1)
category2 = Category.objects.get(id=2)
category3 = Category.objects.get(id=3) 
category4 = Category.objects.get(id=4)

4) Добавить 2 статьи и 1 новость
from new.models import Post
arcticle1 = Post.objects.create(autor=author1, post_type='AR', title='Çàãîëîâîê_ñòàòüè_1', text='Òåêñò_ñòàòüè_1') 
arcticle2 = Post.objects.create(autor=author2, post_type='AR', title='Çàãîëîâîê_ñòàòüè_2', text='Òåêñò_ñòàòüè_2')
new1 = Post.objects.create(autor=author2, post_type='NW', title='Çàãîëîâîê_íîâîñòè_1', text='Òåêñò_íîâîñòè_1')

arcticle1 = Post.objects.get(id=1)
arcticle2 = Post.objects.get(id=2)
new1 = Post.objects.get(id=3)

5) Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий)
arcticle1.category.add(category1) 
arcticle1.category.add(category3) 
arcticle2.category.add(category2)
arcticle2.category.add(category4)
news1.category.add(category1)
news1.category.add(category2)

6) Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий)
from new.models import Comment
comment1 = Comment.objects.create(post=arcticle1, user=user1, text='Òåêñò_êîììåíòàðèÿ_ñòàòüè_1') 
comment2 = Comment.objects.create(post=arcticle2, user=user2, text='Òåêñò_êîììåíòàðèÿ_ñòàòüè_2') 
comment3 = Comment.objects.create(post=arcticle1, user=user1, text='Òåêñò_êîììåíòàðèÿ_ñòàòüè_3') 
comment4 = Comment.objects.create(post=news1, user=user2, text='Òåêñò_êîììåíòàðèÿ_íîâîñòè_1')

comment1 = Comment.objects.get(id=1)
comment2 = Comment.objects.get(id=2)
comment3 = Comment.objects.get(id=3)
comment4 = Comment.objects.get(id=4)

7) Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов
comment1.like() 
comment2.like() 
comment3.like() 
comment4.like()  
comment3.like() 
comment1.like() 
comment2.like() 
comment1.like() 
comment1.dislike() 
comment4.dislike() 
comment3.dislike()
comment3.dislike() 
comment1.dislike() 
arcticle1.like() 
arcticle1.like() 
arcticle1.like() 
arcticle1.like() 
arcticle1.like() 
arcticle1.dislike()
arcticle2.like() 
arcticle2.like() 
arcticle2.like()
new1.like()
new1.dislike()

8) Обновить рейтинги пользователей
author1.update_rating() 
author2.update_rating()

9) Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта)
best = Autor.objects.all().order_by('-rating').values('user', 'rating')[0]
print(best)

10) Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье
Post.objects.all().order_by('-rating').values('time_in', 'autor__user__username', 'rating', 'title', 'text')[0]

11) Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье
Comment.objects.all().order_by().values('time_in', 'user__username', 'rating', 'text')[0]